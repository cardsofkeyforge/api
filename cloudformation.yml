AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Cards of Keyforge backend template
Resources:

  # API GW configuration
  KeyforgeApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: Cards of Keyforge API
      Description: API used for store and retrieve keyforge cards from a db
      FailOnWarnings: true
      BodyS3Location:
        Bucket: 'cards-keyforge'
        Key: 'openapi/openapi.yaml'
      roleArn:

  ApiGatewayAccount:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn: !GetAtt
        - ApiGatewayCloudWatchLogsRole
        - Arn
  KeyforgeApiStage:
    DependsOn:
      - ApiGatewayAccount
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId: !Ref ApiDeployment
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: '*'
          LoggingLevel: INFO
          ResourcePath: /*
      RestApiId: !Ref KeyforgeApi
      StageName: prod
  ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - KeyforgeApi
    Properties:
      RestApiId: !Ref KeyforgeApi
      StageName: prod

  # Lambda functions
  RetrieveCard:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: 'cards-keyforge'
        S3Key: 'functions/retrieve_card.zip'
      Description: fetch card
      FunctionName: retrieve-card
      Handler: retrieve_card/main
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
      Runtime: go1.x

  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: !GetAtt
        - RetrieveCard
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':'
          - !Ref KeyforgeApi
          - /*

  # Roles
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  ApiGatewayCloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                  - 'logs:FilterLogEvents'
                Resource: '*'

Outputs:
  RootUrl:
    Description: Root URL of the API gateway
    Value: !Join
      - ''
      - - 'https://'
        - !Ref KeyforgeApi
        - .execute-api.
        - !Ref 'AWS::Region'
        - .amazonaws.com