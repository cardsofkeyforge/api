openapi: '3.0.3'
info:
  title: Cards of Keyforge
  version: '0.1'
servers:
  - url: https://api.cardsofkeyforge.com

x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true

x-amazon-apigateway-request-validator: basic

paths:
  /cards:
    get:
      x-amazon-apigateway-integration:
        type: mock
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RetrieveCard.Arn}/invocations
        connectionType: INTERNET
        passthroughBehavior: NEVER
        httpMethod: POST
      summary: Returns all cards.
      tags:
        - cards
      parameters:
        - in: header
          name: Lang
          required: false
        - in: header
          name: Tracking-Id
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
  /cards/{set}:
    get:
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RetrieveCard.Arn}/invocations
        connectionType: INTERNET
        passthroughBehavior: NEVER
        httpMethod: POST
      summary: Returns all cards for {set}.
      tags:
        - cards
      parameters:
        - in: path
          name: set
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
  /cards/{set}/{cardName}:
    get:
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RetrieveCard.Arn}/invocations
        connectionType: INTERNET
        passthroughBehavior: NEVER
        httpMethod: POST
      summary: Returns cards for {set} filtered by {cardName}.
      tags:
        - cards
      parameters:
        - in: path
          name: set
          required: false
        - in: path
          name: cardName
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
  /sets:
    get:
      x-amazon-apigateway-integration:
        type: mock
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RetrieveCard.Arn}/invocations
        connectionType: INTERNET
        passthroughBehavior: NEVER
        httpMethod: POST
      summary: Returns all sets.
      tags:
        - cards
      parameters:
        - in: path
          name: set
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Set'
  /sets/{set}:
    get:
      x-amazon-apigateway-integration:
        type: mock
        uri:
          Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RetrieveCard.Arn}/invocations
        connectionType: INTERNET
        passthroughBehavior: NEVER
        httpMethod: POST
      summary: Returns a set.
      tags:
        - cards
      parameters:
        - in: path
          name: set
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
components:
  schemas:
    Source:
      type: object
      properties:
        type:
          type: string
        version:
          type: string
        url:
          type: string
    Rules:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        source:
          $ref: '#/components/schemas/Source'
    House:
      type: object
      properties:
        id:
          type: string
        house:
          type: string
        normal:
          type: string
        zoom:
          type: string
    Card:
      type: object
      properties:
        card_title:
          type: string
        set:
          type: string
        amber:
          type: integer
        card_number:
          type: string
        card_text:
          type: string
        card_type:
          type: string
        expansion:
          type: integer
        flavor_text:
          type: string
        houses:
          type: array
          items:
            $ref: '#/components/schemas/House'
        is_anomaly:
          type: boolean
        is_maverick:
          type: boolean
        power:
          type: string
        rarity:
          type: string
        traits:
          type: string
        errata:
          type: string
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rules'
    SetHouse:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
    Map:
      type: object
      additionalProperties:
        type: string
    Set:
      type: object
      properties:
        sequence:
          type: string
        longname:
          type: string
        code:
          type: integer
        developers:
          type: array
          items:
            type: string
        release:
          type: string
        new_count:
          type: integer
        name:
          type: string
        icon:
          type: string
        houses:
          type: array
          items:
            $ref: '#/components/schemas/SetHouse'
        langs:
          type: object
          items:
            $ref: '#/components/schemas/Map'
        designer:
          type: string
        card_count:
          type: integer





